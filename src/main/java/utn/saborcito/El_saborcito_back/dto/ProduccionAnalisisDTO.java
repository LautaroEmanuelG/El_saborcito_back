package utn.saborcito.El_saborcito_back.dto;

import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.List;

/**
 * üìä DTO para el an√°lisis de producci√≥n de art√≠culos manufacturados
 */
@Data
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class ProduccionAnalisisDTO {

    /**
     * ‚úÖ Indica si se puede producir todo lo solicitado
     */
    private boolean sePuedeProducirCompleto;

    /**
     * üìù Mensaje descriptivo del an√°lisis
     */
    private String mensaje;

    /**
     * üìã Lista de productos analizados
     */
    private List<ProductoAnalisis> productos;

    /**
     * ‚ö†Ô∏è Lista de productos que tienen problemas de producci√≥n
     */
    private List<ProductoConProblema> productosConProblemas;

    /**
     * üìâ Lista de insumos insuficientes
     */
    private List<InsumoInsuficiente> insumosInsuficientes;

    /**
     * üõ†Ô∏è An√°lisis de un producto espec√≠fico
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    public static class ProductoAnalisis {
        private Long articuloId;
        private String denominacion;
        private Double cantidadSolicitada;    // ‚úÖ Cambio de Integer a Double
        private Double cantidadPosible;       // ‚úÖ Cambio de Integer a Double
        private boolean sePuedeProducir;
        private List<InsumoNecesario> insumosNecesarios;
    }

    /**
     * üö´ Producto con problemas de producci√≥n
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    public static class ProductoConProblema {
        private Long articuloId;
        private String denominacion;
        private String motivoProblema;
        private Double cantidadSolicitada;      // ‚úÖ Cambio de Integer a Double
        private Double cantidadMaximaPosible;   // ‚úÖ Cambio de Integer a Double
    }

    /**
     * üì¶ Insumo necesario para producci√≥n
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    public static class InsumoNecesario {
        private Long insumoId;
        private String denominacion;
        private Double cantidadNecesaria;
        private Double stockDisponible;
        private String unidadMedida;
        private boolean esSuficiente;
    }

    /**
     * ‚ö†Ô∏è Insumo con stock insuficiente
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    public static class InsumoInsuficiente {
        private Long insumoId;
        private String denominacion;
        private Double cantidadNecesaria;
        private Double stockDisponible;
        private Double stockFaltante;
        private String unidadMedida;
    }

    /**
     * üéÅ DTO para validaci√≥n de promociones espec√≠ficas
     */
    @Data
    @NoArgsConstructor
    @AllArgsConstructor
    @Builder
    public static class PromocionValidacionDTO {
        private Long promocionId;
        private String promocionDenominacion;
        private Double cantidadSolicitada;        // ‚úÖ Cambio de Integer a Double
        private Double cantidadMaximaAplicable;   // ‚úÖ Cambio de Integer a Double
        private boolean esValida;
        private String motivoNoValida;
        private List<ProductoConProblema> productosConProblemas;
        private List<InsumoInsuficiente> insumosInsuficientes;
        private Double precioTotalPromocion;
        private Double ahorroTotal;
    }
}